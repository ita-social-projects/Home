name: Build and deploy workflow

on:
  push:
    branches:
      - dev
      - master
      - 'release/**'
      - 'hotfix/**'
#      - 'feature/**'

jobs:
  package:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      API_TESTS_VERBOSE_LOGGING: false
      REVISION: '-0-SNAPSHOT'
      BRANCH_NAME: ''
      GITHUB_SHA_SHORT: ''
      TAG_NAME: ''
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Get branch name
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Get tag name
        run: echo "TAG_NAME=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV

      - name: Get short git commit sha
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Branch condition
        run: |
          if [ ${{ github.ref }} == refs/heads/master ];
          then
            echo "REVISION=-${{github.run_number}}" >> $GITHUB_ENV
          else
            if [ ${{ github.ref }} == refs/heads/dev ];
            then
              echo "REVISION=-${{github.run_number}}-dev" >> $GITHUB_ENV
            else
              if [ ${{ github.ref }} == refs/heads/release/$BRANCH_NAME ];
              then
                echo "REVISION=-${{github.run_number}}-rc" >> $GITHUB_ENV
              else
                echo "REVISION=-${{github.run_number}}-$(echo $GITHUB_REF | cut -d'/' -f 3)_${BRANCH_NAME//#/-}" >> $GITHUB_ENV
              fi
            fi
          fi

      - name: Sync readme with home-application repository
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          repository: homeacademy/home-application
          readme: "home-docs/docker-readme.md"

      - name: Sync readme with data-migration repository
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          repository: homeacademy/data-migration
          readme: "home-docs/docker-readme.md"

      - name: Publish to GitHub Packages and Docker Hub
        if: "startsWith(env.TAG_NAME, 'dev') || startsWith(env.TAG_NAME, 'release')"
        run: >-
          mvn -V -e -B -ntp
          clean deploy sonar:sonar
          -Papi-tests-infrastructure
          -Papi-tests
          -Ppush.images
          -Pjacoco -Dsonar.coverage.jacoco.xmlReportPaths=${{ github.workspace }}/home-api-tests/target/site/jacoco-aggregate/jacoco.xml
          -Dpostgres.user=${{secrets.POSTGRES_USER}}
          -Dpostgres.password=${{secrets.POSTGRES_PASSWORD}}
          -Ddockerhub.username=${{secrets.DOCKER_USERNAME}}
          -Ddockerhub.password=${{secrets.DOCKER_PASSWORD}}
          -Dapi.tests.verbose.logging=${{env.API_TESTS_VERBOSE_LOGGING}}
          -Dgithub.packages.read.username=${{secrets.PACKAGES_READ_USERNAME}}
          -Dgithub.packages.read.token=${{secrets.PACKAGES_READ_TOKEN}}
          -Dci_revision=$REVISION
          -DbuildNumber=${{github.run_number}}
          -Dgit_commit_sha=$GITHUB_SHA_SHORT

      - name: Publish to GitHub Packages
        if: "!startsWith(env.TAG_NAME, 'dev') && !startsWith(env.TAG_NAME, 'release')"
        run: >-
          mvn -V -e -B -ntp
          clean deploy
          -Dpostgres.user=${{secrets.POSTGRES_USER}}
          -Dpostgres.password=${{secrets.POSTGRES_PASSWORD}}
          -Dapi.tests.verbose.logging=${{env.API_TESTS_VERBOSE_LOGGING}}
          -Dgithub.packages.read.username=${{secrets.PACKAGES_READ_USERNAME}}
          -Dgithub.packages.read.token=${{secrets.PACKAGES_READ_TOKEN}}
          -Dci_revision=$REVISION
          -DbuildNumber=${{github.run_number}}

  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run: heroku container:login
      - name: Push image to Heroku
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run:
          docker pull homeacademy/home-application &&
          docker tag homeacademy/home-application registry.heroku.com/home-project-academy/web &&
          docker push registry.heroku.com/home-project-academy/web
      - name: Deploy application to Heroku
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run:
          heroku container:release -a home-project-academy web
