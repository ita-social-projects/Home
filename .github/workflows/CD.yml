name: Packaging and Deploying

on:
  push:
    branches: [ dev, master ]

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Sync readme with home-application repository
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          repository: homeacademy/home-application
          readme: "home-docs/docker-readme.md"
      - name: Sync readme with data-migration repository
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          repository: homeacademy/data-migration
          readme: "home-docs/docker-readme.md"
      - name: Publish to GitHub Packages and Docker Hub
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          API_TESTS_VERBOSE_LOGGING: false
        run: >-
          mvn -V -e -B -ntp
          clean deploy sonar:sonar
          -Papi-tests-infrastructure
          -Papi-tests
          -Ppush.images
          -Pjacoco -Dsonar.coverage.jacoco.xmlReportPaths=${{ github.workspace }}/home-api-tests/target/site/jacoco-aggregate/jacoco.xml
          -Dpostgres.user=${{secrets.POSTGRES_USER}}
          -Dpostgres.password=${{secrets.POSTGRES_PASSWORD}}
          -Dhome.application.admin.username=${{secrets.HOME_APPLICATION_ADMIN_USERNAME}}
          -Dhome.application.admin.password=${{secrets.HOME_APPLICATION_ADMIN_PASSWORD}}
          -Ddockerhub.username=${{secrets.DOCKER_USERNAME}}
          -Ddockerhub.password=${{secrets.DOCKER_PASSWORD}}
          -Dapi.tests.verbose.logging=${{env.API_TESTS_VERBOSE_LOGGING}}

  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run: heroku container:login
      - name: Push image to Heroku
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run:
          docker pull homeacademy/home-application &&
          docker tag homeacademy/home-application registry.heroku.com/home-project-academy/web &&
          docker push registry.heroku.com/home-project-academy/web
      - name: Deploy application to Heroku
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run:
          heroku container:release -a home-project-academy web
