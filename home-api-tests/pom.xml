<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <artifactId>home</artifactId>
        <groupId>com.softserveinc.ita.homeproject</groupId>
        <version>${revision}</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>home-api-tests</artifactId>

    <properties>
        <surefire-version>3.0.0-M5</surefire-version>
        <assertj-version>3.18.1</assertj-version>
        <commons-lang3-version>3.11</commons-lang3-version>
        <fabric8io.docker.maven.plugin.version>0.24.0</fabric8io.docker.maven.plugin.version>
        <docker.image.jdk.version>openjdk:11-jdk-buster</docker.image.jdk.version>
        <docker.image.postgres.version>postgres:latest</docker.image.postgres.version>
        <postgres.container.name>db-postgres</postgres.container.name>
        <postgres.internal.port>5432</postgres.internal.port>
        <postgres.db>postgres</postgres.db>
        <postgres.url>jdbc:postgresql://${postgres.container.name}:${postgres.internal.port}/${postgres.db}
        </postgres.url>
        <datasource.url.property>spring.datasource.url</datasource.url.property>
        <home.application.jar.name>home-application</home.application.jar.name>
        <home.application.jar.version>${revision}</home.application.jar.version>
        <home.data.migration.jar.name>home-data-migration</home.data.migration.jar.name>
        <home.data.migration.jar.version>${revision}</home.data.migration.jar.version>
        <liquibase.container.name>liquibase</liquibase.container.name>
        <liquibase.internal.port>8000</liquibase.internal.port>
        <home.application.internal.port>8080</home.application.internal.port>
        <docker.artifacts.path>${project.build.directory}/docker/artifacts</docker.artifacts.path>
        <commons-text-version>1.9</commons-text-version>

    </properties>

    <profiles>
        <profile>
            <id>api-tests-infrastructure</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven.dependency.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.softserveinc.ita.homeproject</groupId>
                                            <artifactId>${home.application.jar.name}</artifactId>
                                            <version>${home.application.jar.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${docker.artifacts.path}</outputDirectory>
                                            <destFileName>
                                                ${home.application.jar.name}-${home.application.jar.version}.jar
                                            </destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>com.softserveinc.ita.homeproject</groupId>
                                            <artifactId>${home.data.migration.jar.name}</artifactId>
                                            <version>${home.data.migration.jar.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${docker.artifacts.path}</outputDirectory>
                                            <destFileName>
                                                ${home.data.migration.jar.name}-${home.data.migration.jar.version}.jar
                                            </destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>reserve-port</id>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <portNames>
                                        <portName>home.application.external.port</portName>
                                        <portName>liquibase.external.port</portName>
                                        <portName>postgres.external.port</portName>
                                    </portNames>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${fabric8io.docker.maven.plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <alias>${postgres.container.name}</alias>
                                    <name>${postgres.container.name}</name>
                                    <build>
                                        <from>${docker.image.postgres.version}</from>
                                    </build>
                                    <run>
                                        <env>
                                            <POSTGRES_DB>${postgres.db}</POSTGRES_DB>
                                            <POSTGRES_USER>${postgres.user}</POSTGRES_USER>
                                            <POSTGRES_PASSWORD>${postgres.password}</POSTGRES_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>${postgres.external.port}:${postgres.internal.port}</port>
                                        </ports>
                                        <wait>
                                            <log>database system is ready to accept connections</log>
                                            <time>20000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <alias>${liquibase.container.name}</alias>
                                    <name>${liquibase.container.name}</name>
                                    <build>
                                        <from>${docker.image.jdk.version}</from>
                                        <entryPoint>
                                            <exec>
                                                <args>java</args>
                                                <args>-jar</args>
                                                <args>
                                                    ${home.data.migration.jar.name}-${home.data.migration.jar.version}.jar
                                                </args>
                                                <args>--url=${postgres.url}</args>
                                                <args>--user=${postgres.user}</args>
                                                <args>--password=${postgres.password}</args>
                                            </exec>
                                        </entryPoint>
                                        <assembly>
                                            <basedir>/</basedir>
                                            <inline>
                                                <files>
                                                    <file>
                                                        <source>
                                                            ${docker.artifacts.path}/${home.data.migration.jar.name}-${home.data.migration.jar.version}.jar
                                                        </source>
                                                        <outputDirectory>/</outputDirectory>
                                                    </file>
                                                </files>
                                            </inline>
                                        </assembly>
                                    </build>
                                    <run>
                                        <ports>
                                            <port>${liquibase.external.port}:${liquibase.internal.port}</port>
                                        </ports>
                                        <links>
                                            <link>${postgres.container.name}</link>
                                        </links>
                                        <wait>
                                            <log>Successfully released change log lock</log>
                                            <time>10000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <alias>${project.artifactId}</alias>
                                    <name>${project.artifactId}</name>
                                    <build>
                                        <from>${docker.image.jdk.version}</from>
                                        <entryPoint>
                                            <exec>
                                                <args>java</args>
                                                <args>-jar</args>
                                                <args>-D${datasource.url.property}=${postgres.url}</args>
                                                <args>${home.application.jar.name}-${home.application.jar.version}.jar
                                                </args>
                                            </exec>
                                        </entryPoint>
                                        <assembly>
                                            <basedir>/</basedir>
                                            <inline>
                                                <files>
                                                    <file>
                                                        <source>
                                                            ${docker.artifacts.path}/${home.application.jar.name}-${home.application.jar.version}.jar
                                                        </source>
                                                        <outputDirectory>/</outputDirectory>
                                                    </file>
                                                </files>
                                            </inline>
                                        </assembly>
                                    </build>
                                    <run>
                                        <ports>
                                            <port>${home.application.external.port}:${home.application.internal.port}
                                            </port>
                                        </ports>
                                        <links>
                                            <link>${postgres.container.name}</link>
                                        </links>
                                        <wait>
                                            <log>Started HomeApplication</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>api-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire-version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <home.application.external.port>${home.application.external.port}
                                </home.application.external.port>
                                <postgres.external.port>${postgres.external.port}
                                </postgres.external.port>
                                <liquibase.external.port>${liquibase.external.port}
                                </liquibase.external.port>
                                <home.application.admin.username>${home.application.admin.username}
                                </home.application.admin.username>
                                <home.application.admin.password>${home.application.admin.password}
                                </home.application.admin.password>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.softserveinc.ita.homeproject</groupId>
            <artifactId>home-data-migration</artifactId>
            <version>${revision}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.softserveinc.ita.homeproject</groupId>
            <artifactId>home-java-client</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commons-text-version}</version>
        </dependency>
    </dependencies>
</project>
