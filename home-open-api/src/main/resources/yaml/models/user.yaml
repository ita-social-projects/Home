CreateUser:
  required:
    - id
    - registration_token
    - email
    - password
    - phone_number
  type: object
  properties:
    id:
      type: integer
      example: 1
    registration_token:
      type: string
      example: f8e20775-da55-11eb-a58d-775374b8f3a1
      minLength: 36
    email:
      pattern: '^([\w!#$%&''*+\/=?{|}~^-]|\.){1,60}@(?!-)(?:[a-zA-Z0-9-]{2,250}+\.)+[a-zA-Z]{2,6}$'
      type: string
      example: "p.t.z@gmail.com"
      minLength: 5
      maxLength: 320
    password:
      pattern: '^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\S+$).{8,}$'
      type: string
      example: "mySuperStrongPass2"
      minLength: 8
      maxLength: 128
    phone_number:
      type: string
      example: 380501112233
      minimum: 10
ReadUser:
  allOf:
    - $ref: 'common.yaml#/BaseReadView'
  type: object
  properties:
    first_name:
      type: string
      example: "Petro"
    middle_name:
      type: string
      example: "Petrovich"
    last_name:
      type: string
      example: "Petrov"
    email:
      type: string
      example: "home@gmail.com"
    contacts:
      type: array
      example: [
        { "id": 1,
          "type": "email",
          "main": false,
          "email": "readUserEmail@example.com"
        }
      ]
      items:
        $ref: 'contact.yaml#/ReadContact'
UpdateUser:
  type: object
  required:
    - first_name
    - middle_name
    - last_name
  properties:
    first_name:
      pattern: '^([A-Za-zА-Яа-яґҐЁёІіЇїЄє''’ʼ]+[\s-]?)*'
      type: string
      example: "Petro"
      minLength: 1
      maxLength: 50
    middle_name:
      pattern: '^([A-Za-zА-Яа-яґҐЁёІіЇїЄє''’ʼ]+[\s-]?)*'
      type: string
      example: "Petrovich"
      minLength: 1
      maxLength: 50
    last_name:
      pattern: '^([A-Za-zА-Яа-яґҐЁёІіЇїЄє''’ʼ]+[\s-]?)*'
      type: string
      example: "Petrov"
      minLength: 1
      maxLength: 50
